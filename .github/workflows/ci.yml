name: CI Pipeline

on:
  push:
    branches: [ main, develop, rag-hardening ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.10'
  
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run Black
      run: black --check .
      continue-on-error: true
    
    - name: Run isort
      run: isort --check-only .
      continue-on-error: true
    
    - name: Run Flake8
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=term
      continue-on-error: true
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit pip-audit
    
    - name: Run safety check
      run: safety check --json
      continue-on-error: true
    
    - name: Run bandit
      run: bandit -r . -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Run pip-audit
      run: pip-audit
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: docker build -t vector-rag:${{ github.sha }} .
    
    - name: Run container test
      run: |
        docker run -d -p 5001:5001 --name test-container vector-rag:${{ github.sha }}
        sleep 10
        curl -f http://localhost:5001/health || exit 1
        docker stop test-container
    
    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        image: vector-rag:${{ github.sha }}
        format: spdx-json
      continue-on-error: true
